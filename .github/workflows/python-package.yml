# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python package

on:
  push

jobs:
  build:

    runs-on: ubuntu-latest
    timeout-minutes: 60
    defaults:
      run:
        shell: bash -l {0}

    steps:
    - uses: actions/checkout@v2

    - uses: conda-incubator/setup-miniconda@v2
      with:
        miniconda-version: "latest"
        mamba-version: "*"
        environment-file: environment.yaml
        channels: conda-forge
        activate-environment: env-pysus
        use-mamba: true
        miniforge-variant: Mambaforge

    - name: install dependencies
      shell: bash -l {0}
      run: python setup.py install

    # - name: Install dependencies
    #   continue-on-error: true
    #   run: |
    #     sudo apt install build-essential
    #     sudo apt install g++ gcc gfortran libffi-dev libgdal-dev gdal-bin
    #     python -m pip install --upgrade pip
    #     python -m pip install flake8 nose
    #     if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    # - name: build extension
    #   run: |
    #     python -m pip install --upgrade cffi
    #     python -m pip install --upgrade dbfread geobr wget
    #     python setup.py build
    #     cd pysus/utilities
    #     python _build_readdbc.py
    #     cd ../../
    #     python setup.py install

    - name: Lint with flake8
      run: |
        pip install flake8 nose
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with nosetests
      run: |
        cd pysus/tests/
        nosetests
